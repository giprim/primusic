{"ast":null,"code":"import axios from 'axios';\nimport { MAKE_A_SEARCH } from '../types';\nexport default (text => {\n  return dispatch => {\n    console.log('search For is called');\n    axios({\n      method: 'GET',\n      url: 'https://deezerdevs-deezer.p.rapidapi.com/search',\n      headers: {\n        'content-type': 'application/octet-stream',\n        'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n        'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed',\n        useQueryString: true\n      },\n      params: {\n        q: text\n      }\n    }).then(res => dispatch({\n      type: MAKE_A_SEARCH,\n      payload: res.data\n    }));\n  };\n});","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/REACT/primusic/src/redux/actions/searchFor.ts"],"names":["axios","MAKE_A_SEARCH","text","dispatch","console","log","method","url","headers","useQueryString","params","q","then","res","type","payload","data"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,gBAAgBC,IAAD,IAAkB;AAChC,SAAQC,QAAD,IAAwB;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAL,IAAAA,KAAK,CAAC;AACLM,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAE,iDAFA;AAGLC,MAAAA,OAAO,EAAE;AACR,wBAAgB,0BADR;AAER,2BAAmB,kCAFX;AAGR,0BAAkB,oDAHV;AAIRC,QAAAA,cAAc,EAAE;AAJR,OAHJ;AASLC,MAAAA,MAAM,EAAE;AACPC,QAAAA,CAAC,EAAET;AADI;AATH,KAAD,CAAL,CAYGU,IAZH,CAYSC,GAAD,IACPV,QAAQ,CAAC;AACRW,MAAAA,IAAI,EAAEb,aADE;AAERc,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFL,KAAD,CAbT;AAkBA,GApBD;AAqBA,CAtBD","sourcesContent":["import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport { MAKE_A_SEARCH } from '../types';\n\nexport default (text: string) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log('search For is called');\n\t\taxios({\n\t\t\tmethod: 'GET',\n\t\t\turl: 'https://deezerdevs-deezer.p.rapidapi.com/search',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/octet-stream',\n\t\t\t\t'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n\t\t\t\t'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed',\n\t\t\t\tuseQueryString: true,\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tq: text,\n\t\t\t},\n\t\t}).then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: MAKE_A_SEARCH,\n\t\t\t\tpayload: res.data,\n\t\t\t})\n\t\t);\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}