{"ast":null,"code":"var _jsxFileName = \"/home/gi/NODEWORKSPACE/REACT/primusic/src/components/searchbar/searchbar.tsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport searchFor from '../../redux/actions/searchFor';\nimport Search from 'antd/lib/input/Search';\n\nconst Searchbar = () => {\n  const searchResult = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handlerSearch = (text, event) => {\n    if (text !== '') dispatch(searchFor(text));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"gi_width_res\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Search, {\n    allowClear: true,\n    placeholder: \"Search...\",\n    className: \"searchBar\",\n    onSearch: handlerSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default Searchbar;","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/REACT/primusic/src/components/searchbar/searchbar.tsx"],"names":["React","useSelector","useDispatch","searchFor","Search","Searchbar","searchResult","state","dispatch","handlerSearch","text","event"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAAhC;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,aAAa,GAAG,CACrBC,IADqB,EAErBC,KAFqB,KAOjB;AACJ,QAAID,IAAI,KAAK,EAAb,EAAiBF,QAAQ,CAACL,SAAS,CAACO,IAAD,CAAV,CAAR;AACjB,GATD;;AAWA,SACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,UAAU,MADX;AAEC,IAAA,WAAW,EAAC,WAFb;AAGC,IAAA,SAAS,EAAC,WAHX;AAIC,IAAA,QAAQ,EAAED,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAUA,CAzBD;;AA2BA,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Input, Tooltip, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport searchFor from '../../redux/actions/searchFor';\nimport Search from 'antd/lib/input/Search';\n\nconst Searchbar: React.FC = () => {\n\tconst searchResult = useSelector((state) => state);\n\tconst dispatch = useDispatch();\n\n\tconst handlerSearch = (\n\t\ttext: string,\n\t\tevent?:\n\t\t\t| React.ChangeEvent<HTMLInputElement>\n\t\t\t| React.MouseEvent<HTMLElement, MouseEvent>\n\t\t\t| React.KeyboardEvent<HTMLInputElement>\n\t\t\t| undefined\n\t) => {\n\t\tif (text !== '') dispatch(searchFor(text));\n\t};\n\n\treturn (\n\t\t<div className='gi_width_res'>\n\t\t\t<Search\n\t\t\t\tallowClear\n\t\t\t\tplaceholder='Search...'\n\t\t\t\tclassName='searchBar'\n\t\t\t\tonSearch={handlerSearch}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}