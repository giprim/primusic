{"ast":null,"code":"import axios from 'axios';\nimport { MAKE_A_SEARCH, RESULT_FOUND, LOADED } from '../types';\nexport default (query => {\n  return dispatch => {\n    axios({\n      method: 'GET',\n      url: 'https://deezerdevs-deezer.p.rapidapi.com/search',\n      headers: {\n        'content-type': 'application/octet-stream',\n        'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n        'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed',\n        useQueryString: true\n      },\n      params: {\n        q: query\n      }\n    }).then(res => {\n      dispatch({\n        type: MAKE_A_SEARCH,\n        payload: res.data,\n        query\n      });\n      dispatch({\n        type: LOADED\n      });\n    }).catch(err => dispatch({\n      type: RESULT_FOUND,\n      payload: err\n    }));\n  };\n});","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/REACT/primusic/src/redux/actions/searchFor.ts"],"names":["axios","MAKE_A_SEARCH","RESULT_FOUND","LOADED","query","dispatch","method","url","headers","useQueryString","params","q","then","res","type","payload","data","catch","err"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,MAAtC,QAAoD,UAApD;AAEA,gBAAgBC,KAAD,IAAmB;AACjC,SAAQC,QAAD,IAAwB;AAC9BL,IAAAA,KAAK,CAAC;AACLM,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAE,iDAFA;AAGLC,MAAAA,OAAO,EAAE;AACR,wBAAgB,0BADR;AAER,2BAAmB,kCAFX;AAGR,0BAAkB,oDAHV;AAIRC,QAAAA,cAAc,EAAE;AAJR,OAHJ;AASLC,MAAAA,MAAM,EAAE;AACPC,QAAAA,CAAC,EAAEP;AADI;AATH,KAAD,CAAL,CAaEQ,IAbF,CAaQC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AACRS,QAAAA,IAAI,EAAEb,aADE;AAERc,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAFL;AAGRZ,QAAAA;AAHQ,OAAD,CAAR;AAKAC,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEX;AAAR,OAAD,CAAR;AACA,KApBF,EAqBEc,KArBF,CAqBSC,GAAD,IACNb,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEZ,YADE;AAERa,MAAAA,OAAO,EAAEG;AAFD,KAAD,CAtBV;AA2BA,GA5BD;AA6BA,CA9BD","sourcesContent":["import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport { MAKE_A_SEARCH, RESULT_FOUND, LOADED } from '../types';\n\nexport default (query: string) => {\n\treturn (dispatch: Dispatch) => {\n\t\taxios({\n\t\t\tmethod: 'GET',\n\t\t\turl: 'https://deezerdevs-deezer.p.rapidapi.com/search',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/octet-stream',\n\t\t\t\t'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n\t\t\t\t'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed',\n\t\t\t\tuseQueryString: true,\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tq: query,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: MAKE_A_SEARCH,\n\t\t\t\t\tpayload: res.data,\n\t\t\t\t\tquery,\n\t\t\t\t});\n\t\t\t\tdispatch({ type: LOADED });\n\t\t\t})\n\t\t\t.catch((err) =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: RESULT_FOUND,\n\t\t\t\t\tpayload: err,\n\t\t\t\t})\n\t\t\t);\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}