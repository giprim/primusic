{"ast":null,"code":"import { MAKE_A_SEARCH, FETCH_NEXT } from '../types';\nconst initialState = {\n  data: [],\n  next: '',\n  prev: '',\n  total: 0\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case MAKE_A_SEARCH:\n      return { ...state,\n        data: [...action.payload.data],\n        next: action.payload.next,\n        total: action.payload.total\n      };\n\n    case FETCH_NEXT:\n      console.log('Reducer: ', action.payload);\n      return { ...state,\n        data: [...action.payload.data],\n        next: action.payload.next,\n        prev: action.payload.prev,\n        total: action.payload.total\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/REACT/primusic/src/redux/reducer/searchReducer.ts"],"names":["MAKE_A_SEARCH","FETCH_NEXT","initialState","data","next","prev","total","state","action","type","payload","console","log"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,UAA1C;AAGA,MAAMC,YAAqB,GAAG;AAC7BC,EAAAA,IAAI,EAAE,EADuB;AAE7BC,EAAAA,IAAI,EAAE,EAFuB;AAG7BC,EAAAA,IAAI,EAAE,EAHuB;AAI7BC,EAAAA,KAAK,EAAE;AAJsB,CAA9B;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAA4C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,aAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENJ,QAAAA,IAAI,EAAE,CAAC,GAAGK,MAAM,CAACE,OAAP,CAAeP,IAAnB,CAFA;AAGNC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAHf;AAINE,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAJhB,OAAP;;AAMD,SAAKL,UAAL;AACCU,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAM,CAACE,OAAhC;AACA,aAAO,EACN,GAAGH,KADG;AAENJ,QAAAA,IAAI,EAAE,CAAC,GAAGK,MAAM,CAACE,OAAP,CAAeP,IAAnB,CAFA;AAGNC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAHf;AAINC,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL,IAJf;AAKNC,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AALhB,OAAP;;AAOD;AACC,aAAOC,KAAP;AAlBF;AAoBA,CArBD","sourcesContent":["import { MAKE_A_SEARCH, FETCH_NEXT } from '../types';\nimport { IArtist, IActions } from '../../interfaces';\n\nconst initialState: IArtist = {\n\tdata: [],\n\tnext: '',\n\tprev: '',\n\ttotal: 0,\n};\n\nexport default (state = initialState, action: IActions) => {\n\tswitch (action.type) {\n\t\tcase MAKE_A_SEARCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: [...action.payload.data],\n\t\t\t\tnext: action.payload.next,\n\t\t\t\ttotal: action.payload.total,\n\t\t\t};\n\t\tcase FETCH_NEXT:\n\t\t\tconsole.log('Reducer: ', action.payload);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: [...action.payload.data],\n\t\t\t\tnext: action.payload.next,\n\t\t\t\tprev: action.payload.prev,\n\t\t\t\ttotal: action.payload.total,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}