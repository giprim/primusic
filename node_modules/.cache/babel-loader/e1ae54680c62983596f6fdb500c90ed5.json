{"ast":null,"code":"var _jsxFileName = \"/home/gi/NODEWORKSPACE/REACT/primusic/src/components/searchbar.tsx\";\nimport React, { useState } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Input, Tooltip, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport searchFor from '../redux/actions/searchFor';\n\nconst Searchbar = () => {\n  const searchResult = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const handlerSearch = event => {\n    event.preventDefault();\n    dispatch(searchFor(query));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"gi_width_res\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handlerSearch,\n    name: \"searchForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Input, {\n    size: \"large\",\n    prefix: React.createElement(SearchOutlined, {\n      className: \"searchIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    placeholder: \"Search...\",\n    className: \"searchBar\",\n    type: \"Search\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    title: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    shape: \"circle\",\n    icon: React.createElement(SearchOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};\n\nexport default Searchbar;","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/REACT/primusic/src/components/searchbar.tsx"],"names":["React","useState","SearchOutlined","Input","Tooltip","Button","useSelector","useDispatch","searchFor","Searchbar","searchResult","state","dispatch","query","setQuery","handlerSearch","event","preventDefault","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,MAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAGA,MAAMC,SAAmB,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAZ,CAAhC;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,aAAa,GAAIC,KAAD,IAA6C;AAClEA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,QAAQ,CAACJ,SAAS,CAACK,KAAD,CAAV,CAAR;AACA,GAHD;;AAKA,SACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAA+B,IAAA,IAAI,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,MAAM,EAAE,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFT;AAGC,IAAA,WAAW,EAAC,WAHb;AAIC,IAAA,SAAS,EAAC,WAJX;AAKC,IAAA,IAAI,EAAC,QALN;AAMC,IAAA,KAAK,EAAEF,KANR;AAOC,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAVD,CADD,CADD;AAwBA,CAnCD;;AAqCA,eAAeX,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Input, Tooltip, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport searchFor from '../redux/actions/searchFor';\nimport Search from 'antd/lib/input/Search';\n\nconst Searchbar: React.FC = () => {\n\tconst searchResult = useSelector((state) => state);\n\tconst dispatch = useDispatch();\n\n\tconst [query, setQuery] = useState('');\n\n\tconst handlerSearch = (event: React.FormEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault();\n\t\tdispatch(searchFor(query));\n\t};\n\n\treturn (\n\t\t<div className='gi_width_res'>\n\t\t\t<form onSubmit={handlerSearch} name='searchForm'>\n\t\t\t\t<Input\n\t\t\t\t\tsize='large'\n\t\t\t\t\tprefix={<SearchOutlined className='searchIcon' />}\n\t\t\t\t\tplaceholder='Search...'\n\t\t\t\t\tclassName='searchBar'\n\t\t\t\t\ttype='Search'\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Tooltip title='search'>\n\t\t\t\t\t<Button type='primary' shape='circle' icon={<SearchOutlined />} />\n\t\t\t\t</Tooltip>\n\t\t\t</form>\n\t\t\t{/* <Search\n\t\t\t\tplaceholder='input search text'\n\t\t\t\tvalue={query}\n\t\t\t\tonSearch={(value) => console.log(value)}\n\t\t\t\tstyle={{ width: 200 }}\n\t\t\t/> */}\n\t\t</div>\n\t);\n};\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}